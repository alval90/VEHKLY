{"ast":null,"code":"var _jsxFileName = \"/Users/alexandervalerian/Informatik/my-app/src/components/MealList/MealList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, ContainerSize } from '../Container/Container';\nimport { useNavigate } from 'react-router-dom';\nimport { useQuery } from '../../utils/hooks';\nimport { Spacer, Spacing } from '../Spacer/Spacer';\nimport { MealView } from \"../MealDetailView/MealDetailView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MealList = () => {\n  _s();\n  let [mondayMeals, setMondayMeals] = useState();\n  let [tuesdayMeals, setTuesdayMeals] = useState();\n  let [wednesdayMeals, setWednesdayMeals] = useState();\n  let [thursdayMeals, setThursdayMeals] = useState();\n  let [fridayMeals, setFridayMeals] = useState();\n  let navigate = useNavigate();\n  let query = useQuery();\n  let weekReturnedMock = require('./MockData/weekReturned.json');\n  useEffect(() => {\n    let year = query.get('year');\n    let month = query.get('month');\n\n    // TODO: fetch meal info\n\n    for (let meal of weekReturnedMock) {\n      let {\n        breakfast,\n        lunch,\n        dinner\n      } = meal;\n      let mealsUpdated = [breakfast, lunch, dinner].filter(meal => meal !== null);\n      switch (meal.day) {\n        case \"Monday\":\n          setMondayMeals(mealsUpdated);\n          break;\n        case \"Tuesday\":\n          setTuesdayMeals(mealsUpdated);\n          break;\n        case \"Wednesday\":\n          setWednesdayMeals(mealsUpdated);\n          break;\n        case \"Thursday\":\n          setThursdayMeals(mealsUpdated);\n          break;\n        case \"Friday\":\n          setFridayMeals(mealsUpdated);\n          break;\n      }\n    }\n  });\n  let mondayList = mondayMeals === null || mondayMeals === void 0 ? void 0 : mondayMeals.map(meal => /*#__PURE__*/_jsxDEV(MealView, {\n    meal: meal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 45\n  }, this));\n  let tuesdayList = tuesdayMeals === null || tuesdayMeals === void 0 ? void 0 : tuesdayMeals.map(meal => /*#__PURE__*/_jsxDEV(MealView, {\n    meal: meal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 47\n  }, this));\n  let wednesdayList = wednesdayMeals === null || wednesdayMeals === void 0 ? void 0 : wednesdayMeals.map(meal => /*#__PURE__*/_jsxDEV(MealView, {\n    meal: meal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 51\n  }, this));\n  let thursdayList = thursdayMeals === null || thursdayMeals === void 0 ? void 0 : thursdayMeals.map(meal => /*#__PURE__*/_jsxDEV(MealView, {\n    meal: meal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 49\n  }, this));\n  let fridayList = fridayMeals === null || fridayMeals === void 0 ? void 0 : fridayMeals.map(meal => /*#__PURE__*/_jsxDEV(MealView, {\n    meal: meal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 45\n  }, this));\n  const handleClick = e => {\n    navigate(-1);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    size: ContainerSize.Small,\n    children: [/*#__PURE__*/_jsxDEV(Spacer, {\n      size: Spacing.m\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: handleClick,\n      style: {\n        paddingLeft: '20px',\n        alignSelf: 'baseline',\n        color: 'blue',\n        cursor: 'pointer',\n        fontWeight: 700\n      },\n      children: \"\\u2190 back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), mondayList && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Monday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), mondayList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n      size: Spacing.m\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(MealList, \"Ej6ilBFJ4hTAdBcFjIzOdIwKL0M=\", false, function () {\n  return [useNavigate, useQuery];\n});\n_c = MealList;\nvar _c;\n$RefreshReg$(_c, \"MealList\");","map":{"version":3,"names":["React","useEffect","useState","Container","ContainerSize","useNavigate","useQuery","Spacer","Spacing","MealView","jsxDEV","_jsxDEV","MealList","_s","mondayMeals","setMondayMeals","tuesdayMeals","setTuesdayMeals","wednesdayMeals","setWednesdayMeals","thursdayMeals","setThursdayMeals","fridayMeals","setFridayMeals","navigate","query","weekReturnedMock","require","year","get","month","meal","breakfast","lunch","dinner","mealsUpdated","filter","day","mondayList","map","fileName","_jsxFileName","lineNumber","columnNumber","tuesdayList","wednesdayList","thursdayList","fridayList","handleClick","e","size","Small","children","m","onClick","style","paddingLeft","alignSelf","color","cursor","fontWeight","_c","$RefreshReg$"],"sources":["/Users/alexandervalerian/Informatik/my-app/src/components/MealList/MealList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Container, ContainerSize } from '../Container/Container';\nimport { useNavigate } from 'react-router-dom';\nimport { useQuery } from '../../utils/hooks';\nimport { Spacer, Spacing } from '../Spacer/Spacer';\nimport {MealView} from \"../MealDetailView/MealDetailView\";\nimport {MediaCard} from \"../MediaCard/MediaCard\";\nimport {getMealDay, getMealIndex, MealDay} from \"../MealPlan/MealPlan\";\nimport { Meal } from '../AddMeal/AddMeal';\n\nexport const MealList = () => {\n  let [mondayMeals, setMondayMeals] = useState<Meal[]>();\n  let [tuesdayMeals, setTuesdayMeals] = useState<Meal[]>();\n  let [wednesdayMeals, setWednesdayMeals] = useState<Meal[]>();\n  let [thursdayMeals, setThursdayMeals] = useState<Meal[]>();\n  let [fridayMeals, setFridayMeals] = useState<Meal[]>();\n\n  let navigate = useNavigate();\n  let query = useQuery();\n\n  let weekReturnedMock = require('./MockData/weekReturned.json');\n\n  useEffect(() => {\n    let year = query.get('year');\n    let month = query.get('month');\n\n    // TODO: fetch meal info\n\n    for (let meal of weekReturnedMock) {\n      let { breakfast, lunch, dinner } = meal;\n      let mealsUpdated = [breakfast, lunch, dinner].filter(meal => meal !== null);\n      switch (meal.day) {\n        case \"Monday\":\n          setMondayMeals(mealsUpdated);\n          break;\n        case \"Tuesday\":\n          setTuesdayMeals(mealsUpdated);\n          break;\n        case \"Wednesday\":\n          setWednesdayMeals(mealsUpdated);\n          break;\n        case \"Thursday\":\n          setThursdayMeals(mealsUpdated);\n          break;\n        case \"Friday\":\n          setFridayMeals(mealsUpdated);\n          break;\n      }\n    }\n\n  });\n\n  let mondayList = mondayMeals?.map(meal => <MealView meal={meal} />);\n  let tuesdayList = tuesdayMeals?.map(meal => <MealView meal={meal} />);\n  let wednesdayList = wednesdayMeals?.map(meal => <MealView meal={meal} />);\n  let thursdayList = thursdayMeals?.map(meal => <MealView meal={meal} />);\n  let fridayList = fridayMeals?.map(meal => <MealView meal={meal} />);\n\n  const handleClick = (e: any) => {\n    navigate(-1);\n  };\n\n  return (\n    <Container size={ContainerSize.Small}>\n      <Spacer size={Spacing.m} />\n      <p\n        onClick={handleClick}\n        style={{\n          paddingLeft: '20px',\n          alignSelf: 'baseline',\n          color: 'blue',\n          cursor: 'pointer',\n          fontWeight: 700\n        }}\n      >\n        ‚Üê back\n      </p>\n      {mondayList && <div>\n        <h1>Monday</h1>\n        {mondayList}\n      </div>\n      }\n      <Spacer size={Spacing.m} />\n    </Container>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,aAAa,QAAQ,wBAAwB;AACjE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,MAAM,EAAEC,OAAO,QAAQ,kBAAkB;AAClD,SAAQC,QAAQ,QAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK1D,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,IAAI,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAS,CAAC;EACtD,IAAI,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAS,CAAC;EACxD,IAAI,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAS,CAAC;EAC5D,IAAI,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAS,CAAC;EAC1D,IAAI,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAS,CAAC;EAEtD,IAAIsB,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAC5B,IAAIoB,KAAK,GAAGnB,QAAQ,CAAC,CAAC;EAEtB,IAAIoB,gBAAgB,GAAGC,OAAO,CAAC,8BAA8B,CAAC;EAE9D1B,SAAS,CAAC,MAAM;IACd,IAAI2B,IAAI,GAAGH,KAAK,CAACI,GAAG,CAAC,MAAM,CAAC;IAC5B,IAAIC,KAAK,GAAGL,KAAK,CAACI,GAAG,CAAC,OAAO,CAAC;;IAE9B;;IAEA,KAAK,IAAIE,IAAI,IAAIL,gBAAgB,EAAE;MACjC,IAAI;QAAEM,SAAS;QAAEC,KAAK;QAAEC;MAAO,CAAC,GAAGH,IAAI;MACvC,IAAII,YAAY,GAAG,CAACH,SAAS,EAAEC,KAAK,EAAEC,MAAM,CAAC,CAACE,MAAM,CAACL,IAAI,IAAIA,IAAI,KAAK,IAAI,CAAC;MAC3E,QAAQA,IAAI,CAACM,GAAG;QACd,KAAK,QAAQ;UACXtB,cAAc,CAACoB,YAAY,CAAC;UAC5B;QACF,KAAK,SAAS;UACZlB,eAAe,CAACkB,YAAY,CAAC;UAC7B;QACF,KAAK,WAAW;UACdhB,iBAAiB,CAACgB,YAAY,CAAC;UAC/B;QACF,KAAK,UAAU;UACbd,gBAAgB,CAACc,YAAY,CAAC;UAC9B;QACF,KAAK,QAAQ;UACXZ,cAAc,CAACY,YAAY,CAAC;UAC5B;MACJ;IACF;EAEF,CAAC,CAAC;EAEF,IAAIG,UAAU,GAAGxB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEyB,GAAG,CAACR,IAAI,iBAAIpB,OAAA,CAACF,QAAQ;IAACsB,IAAI,EAAEA;EAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC;EACnE,IAAIC,WAAW,GAAG5B,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEuB,GAAG,CAACR,IAAI,iBAAIpB,OAAA,CAACF,QAAQ;IAACsB,IAAI,EAAEA;EAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC;EACrE,IAAIE,aAAa,GAAG3B,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEqB,GAAG,CAACR,IAAI,iBAAIpB,OAAA,CAACF,QAAQ;IAACsB,IAAI,EAAEA;EAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC;EACzE,IAAIG,YAAY,GAAG1B,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEmB,GAAG,CAACR,IAAI,iBAAIpB,OAAA,CAACF,QAAQ;IAACsB,IAAI,EAAEA;EAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC;EACvE,IAAII,UAAU,GAAGzB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEiB,GAAG,CAACR,IAAI,iBAAIpB,OAAA,CAACF,QAAQ;IAACsB,IAAI,EAAEA;EAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC;EAEnE,MAAMK,WAAW,GAAIC,CAAM,IAAK;IAC9BzB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACd,CAAC;EAED,oBACEb,OAAA,CAACR,SAAS;IAAC+C,IAAI,EAAE9C,aAAa,CAAC+C,KAAM;IAAAC,QAAA,gBACnCzC,OAAA,CAACJ,MAAM;MAAC2C,IAAI,EAAE1C,OAAO,CAAC6C;IAAE;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3BhC,OAAA;MACE2C,OAAO,EAAEN,WAAY;MACrBO,KAAK,EAAE;QACLC,WAAW,EAAE,MAAM;QACnBC,SAAS,EAAE,UAAU;QACrBC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,SAAS;QACjBC,UAAU,EAAE;MACd,CAAE;MAAAR,QAAA,EACH;IAED;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACHL,UAAU,iBAAI3B,OAAA;MAAAyC,QAAA,gBACbzC,OAAA;QAAAyC,QAAA,EAAI;MAAM;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACdL,UAAU;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAENhC,OAAA,CAACJ,MAAM;MAAC2C,IAAI,EAAE1C,OAAO,CAAC6C;IAAE;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEhB,CAAC;AAAC9B,EAAA,CA3EWD,QAAQ;EAAA,QAOJP,WAAW,EACdC,QAAQ;AAAA;AAAAuD,EAAA,GARTjD,QAAQ;AAAA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}