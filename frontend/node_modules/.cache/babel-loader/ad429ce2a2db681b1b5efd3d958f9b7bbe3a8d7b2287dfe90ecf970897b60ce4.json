{"ast":null,"code":"var _jsxFileName = \"/Users/alexandervalerian/Informatik/my-app/src/components/MealList/MealList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, ContainerSize } from '../Container/Container';\nimport { useNavigate } from 'react-router-dom';\nimport { useQuery } from '../../utils/hooks';\nimport { Spacer, Spacing } from '../Spacer/Spacer';\nimport { MealView } from \"../MealDetailView/MealDetailView\";\nimport { MediaCard } from \"../MediaCard/MediaCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MealList = () => {\n  _s();\n  let [mondayMeals, setMondayMeals] = useState();\n  let [tuesdayMeals, setTuesdayMeals] = useState();\n  let [wednesdayMeals, setWednesdayMeals] = useState();\n  let [thursdayMeals, setThursdayMeals] = useState();\n  let [fridayMeals, setFridayMeals] = useState();\n  let navigate = useNavigate();\n  let query = useQuery();\n  let weekReturnedMock = require('./MockData/weekReturned.json');\n  useEffect(() => {\n    let year = query.get('year');\n    let month = query.get('month');\n    for (let meal of weekReturnedMock) {\n      let {\n        breakfast,\n        lunch,\n        dinner\n      } = meal;\n      switch (meal.day) {\n        case \"Monday\":\n      }\n      if (breakfast !== null) {\n        let {\n          imagePath,\n          title\n        } = breakfast;\n        breakfastUpdated[mealIndex] = /*#__PURE__*/_jsxDEV(MediaCard, {\n          imagePath: imagePath,\n          imageTitle: title,\n          clickEvent: () => removeMeal(mealDay, MealType.breakfast, mealIndex)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this);\n      }\n      if (lunch !== null) {\n        let {\n          imagePath,\n          title\n        } = lunch;\n        lunchUpdated[mealIndex] = /*#__PURE__*/_jsxDEV(MediaCard, {\n          imagePath: imagePath,\n          imageTitle: title,\n          clickEvent: () => removeMeal(mealDay, MealType.lunch, mealIndex)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this);\n      }\n      if (dinner !== null) {\n        let {\n          imagePath,\n          title\n        } = dinner;\n        dinnerUpdated[mealIndex] = /*#__PURE__*/_jsxDEV(MediaCard, {\n          imagePath: imagePath,\n          imageTitle: title,\n          clickEvent: () => removeMeal(mealDay, MealType.dinner, mealIndex)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this);\n      }\n    }\n    let monMeals = weekReturnedMock.map(i => i.day);\n\n    // TODO: fetch meal info\n\n    //setMeal(weekReturnedMock);\n  });\n\n  const handleClick = e => {\n    navigate(-1);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    size: ContainerSize.Small,\n    children: [/*#__PURE__*/_jsxDEV(Spacer, {\n      size: Spacing.m\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: handleClick,\n      style: {\n        paddingLeft: '20px',\n        alignSelf: 'baseline',\n        color: 'blue',\n        cursor: 'pointer',\n        fontWeight: 700\n      },\n      children: \"\\u2190 back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), meal && /*#__PURE__*/_jsxDEV(MealView, {\n      meal: meal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n      size: Spacing.m\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(MealList, \"Ej6ilBFJ4hTAdBcFjIzOdIwKL0M=\", false, function () {\n  return [useNavigate, useQuery];\n});\n_c = MealList;\nvar _c;\n$RefreshReg$(_c, \"MealList\");","map":{"version":3,"names":["React","useEffect","useState","Container","ContainerSize","useNavigate","useQuery","Spacer","Spacing","MealView","MediaCard","jsxDEV","_jsxDEV","MealList","_s","mondayMeals","setMondayMeals","tuesdayMeals","setTuesdayMeals","wednesdayMeals","setWednesdayMeals","thursdayMeals","setThursdayMeals","fridayMeals","setFridayMeals","navigate","query","weekReturnedMock","require","year","get","month","meal","breakfast","lunch","dinner","day","imagePath","title","breakfastUpdated","mealIndex","imageTitle","clickEvent","removeMeal","mealDay","MealType","fileName","_jsxFileName","lineNumber","columnNumber","lunchUpdated","dinnerUpdated","monMeals","map","i","handleClick","e","size","Small","children","m","onClick","style","paddingLeft","alignSelf","color","cursor","fontWeight","_c","$RefreshReg$"],"sources":["/Users/alexandervalerian/Informatik/my-app/src/components/MealList/MealList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Container, ContainerSize } from '../Container/Container';\nimport { useNavigate } from 'react-router-dom';\nimport { useQuery } from '../../utils/hooks';\nimport { Spacer, Spacing } from '../Spacer/Spacer';\nimport {MealView} from \"../MealDetailView/MealDetailView\";\nimport {MediaCard} from \"../MediaCard/MediaCard\";\nimport {getMealDay, getMealIndex, MealDay} from \"../MealPlan/MealPlan\";\n\nexport const MealList = () => {\n  let [mondayMeals, setMondayMeals] = useState();\n  let [tuesdayMeals, setTuesdayMeals] = useState();\n  let [wednesdayMeals, setWednesdayMeals] = useState();\n  let [thursdayMeals, setThursdayMeals] = useState();\n  let [fridayMeals, setFridayMeals] = useState();\n\n  let navigate = useNavigate();\n  let query = useQuery();\n\n  let weekReturnedMock = require('./MockData/weekReturned.json');\n\n  useEffect(() => {\n    let year = query.get('year');\n    let month = query.get('month');\n\n    for (let meal of weekReturnedMock) {\n      let { breakfast, lunch, dinner } = meal;\n      switch (meal.day) {\n        case \"Monday\":\n\n      }\n      if (breakfast !== null) {\n        let { imagePath, title } = breakfast;\n        breakfastUpdated[mealIndex] = (\n          <MediaCard\n            imagePath={imagePath}\n            imageTitle={title}\n            clickEvent={() =>\n              removeMeal(mealDay, MealType.breakfast, mealIndex)\n            }\n          />\n        );\n      }\n      if (lunch !== null) {\n        let { imagePath, title } = lunch;\n        lunchUpdated[mealIndex] = (\n          <MediaCard\n            imagePath={imagePath}\n            imageTitle={title}\n            clickEvent={() => removeMeal(mealDay, MealType.lunch, mealIndex)}\n          />\n        );\n      }\n      if (dinner !== null) {\n        let { imagePath, title } = dinner;\n        dinnerUpdated[mealIndex] = (\n          <MediaCard\n            imagePath={imagePath}\n            imageTitle={title}\n            clickEvent={() => removeMeal(mealDay, MealType.dinner, mealIndex)}\n          />\n        );\n      }\n    }\n\n    let monMeals = weekReturnedMock.map(i => i.day);\n\n    // TODO: fetch meal info\n\n    //setMeal(weekReturnedMock);\n  });\n\n  const handleClick = (e: any) => {\n    navigate(-1);\n  };\n\n  return (\n    <Container size={ContainerSize.Small}>\n      <Spacer size={Spacing.m} />\n      <p\n        onClick={handleClick}\n        style={{\n          paddingLeft: '20px',\n          alignSelf: 'baseline',\n          color: 'blue',\n          cursor: 'pointer',\n          fontWeight: 700\n        }}\n      >\n        ‚Üê back\n      </p>\n      {meal && <MealView meal={meal} />}\n      <Spacer size={Spacing.m} />\n    </Container>\n  );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}