{"ast":null,"code":"var _jsxFileName = \"/Users/alexandervalerian/Informatik/my-app/src/components/Menu/Menu.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst getYearRange = () => {\n  let yearRange = [];\n  let currentYear = new Date().getFullYear();\n  let from = currentYear - 10;\n  let to = currentYear + 10;\n  for (let i = from; i <= to; i++) {\n    yearRange.push(i);\n  }\n  return yearRange;\n};\nexport default function YearMenu() {\n  _s();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const {\n    year,\n    week\n  } = useParams();\n  const navigate = useNavigate();\n  const options = getYearRange();\n  let yearParsed = year ? parseInt(year) : new Date().getFullYear();\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: handleClick,\n      style: {\n        color: \"blue\"\n      },\n      children: [\"\\u2192 \", year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"long-menu\",\n      MenuListProps: {\n        'aria-labelledby': 'long-button'\n      },\n      anchorEl: anchorEl,\n      open: open,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      PaperProps: {\n        style: {\n          maxHeight: ITEM_HEIGHT * 4.5,\n          width: '20ch'\n        }\n      },\n      children: options.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n        selected: option === yearParsed,\n        onClick: handleClose,\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(YearMenu, \"JeN+98JGdKNBvJfb+T7aW8y36bY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = YearMenu;\nvar _c;\n$RefreshReg$(_c, \"YearMenu\");","map":{"version":3,"names":["React","Menu","MenuItem","useNavigate","useParams","jsxDEV","_jsxDEV","ITEM_HEIGHT","getYearRange","yearRange","currentYear","Date","getFullYear","from","to","i","push","YearMenu","_s","anchorEl","setAnchorEl","useState","open","Boolean","year","week","navigate","options","yearParsed","parseInt","handleClick","event","currentTarget","handleClose","children","onClick","style","color","fileName","_jsxFileName","lineNumber","columnNumber","id","MenuListProps","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","maxHeight","width","map","option","selected","_c","$RefreshReg$"],"sources":["/Users/alexandervalerian/Informatik/my-app/src/components/Menu/Menu.tsx"],"sourcesContent":["import * as React from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport {useNavigate, useParams} from \"react-router-dom\";\n\nconst ITEM_HEIGHT = 48;\n\nconst getYearRange = () : number[] => {\n  let yearRange : number[] = [];\n\n  let currentYear : number = new Date().getFullYear();\n  let from : number = currentYear - 10;\n  let to : number = currentYear + 10;\n  for (let i = from; i <= to; i++) {\n    yearRange.push(i);\n  }\n\n  return yearRange;\n}\n\nexport default function YearMenu() {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const { year, week } = useParams();\n  const navigate = useNavigate();\n\n  const options = getYearRange();\n\n  let yearParsed : number = year ? parseInt(year) : new Date().getFullYear();\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <p\n        onClick={handleClick}\n        style={{color:\"blue\"}}\n      >\n        â†’ {year}\n      </p>\n      <Menu\n        id=\"long-menu\"\n        MenuListProps={{\n          'aria-labelledby': 'long-button',\n        }}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        PaperProps={{\n          style: {\n            maxHeight: ITEM_HEIGHT * 4.5,\n            width: '20ch',\n          },\n        }}\n      >\n        {options.map((option) => (\n          <MenuItem key={option} selected={option === yearParsed} onClick={handleClose}>\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}